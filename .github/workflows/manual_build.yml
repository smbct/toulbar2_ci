name: Manual build
on:
  workflow_dispatch:
    inputs:
      
      platform:
        type: choice
        description: "Platform"
        options: 
        - Linux
        - MacOS
        - Windows

      build_type:
        type: choice
        description: "Build type"
        options: 
        - Release
        - Debug
      
      libtoulbar2:
        type: boolean
        description: "Compile ToulBar2 C++ library"
        default: true

      pytoulbar2:
        type: boolean
        description: "Compile pytoulbar2"
        default: false

      boost:
        type: boolean
        description: "Use Boost library"
        default: true

      mpi:
        type: boolean
        description: "Use MPI library (parallel impl.)"
        default: false

      run_tests:
        type: boolean
        description: "Run CMake unit tests"
        default: false

      produce_artifacts:
        type: boolean
        description: "Produce build artifacts"
        default: false

jobs:

  setup_env:

    runs-on: ubuntu-latest
    
    env:
        LIBTB2: 'OFF'
        PYTB2: 'OFF'
        BOOST: 'ON'
        MPI: 'OFF'
    
    steps:

      - uses: actions/checkout@v4

      - name: Set LIBTB2 env var
        run: |
          if [[ ${{ inputs.libtoulbar2 == 'true' }}  ]]; then
              echo "LIBTB2=ON" >> "$GITHUB_ENV"
          fi

      - name: Set PYTB2 env var
        run: |
          if [[ ${{ inputs.pytoulbar2 == 'true' }}  ]]; then
              echo "PYTB2=ON" >> "$GITHUB_ENV"
          fi

      - name: Set BOOST env var
        run: |
          if [[ ${{ inputs.boost == 'false' }}  ]]; then
              echo "Boost=OFF" >> "$GITHUB_ENV"
          fi

      - name: Set MPI env var
        run: |
          if [[ ${{ inputs.mpi == 'true' }}  ]]; then
              echo "MPI=ON" >> "$GITHUB_ENV"
          fi

  linux_build:
    if: ${{ github.event.inputs.platform == 'Linux' }}
    needs: setup_env
    runs-on: ubuntu-latest
    steps:
      uses: ./.github/actions/linux_build
      with:
        build_type: ${{ github.event.inputs.build_type }}
        run_tests: ${{ github.event.inputs.run_tests }}
        pytb2: ${{env.PYTB2}}
        libtb2: ${{env.LIBTB2}}
        boost: ${{env.BOOST}}
        mpi: ${{env.MPI}}

  macos_build:
    if: ${{ github.event.inputs.platform == 'MacOS' }}
    needs: setup_env
    runs-on: macos-latest
    steps:
      uses: ./.github/actions/macos_build
      with:
        build_type: ${{ github.event.inputs.build_type }}
        run_tests: ${{ github.event.inputs.run_tests }}
        pytb2: ${{env.PYTB2}}
        libtb2: ${{env.LIBTB2}}
        boost: ${{env.BOOST}}
        mpi: ${{env.MPI}}

  windows_build:
    if: ${{ github.event.inputs.platform == 'Windows' }}
    needs: setup_env
    runs-on: windows-latest
    steps:
      uses: ./.github/actions/windows_build
      with:
        build_type: ${{ github.event.inputs.build_type }}
        run_tests: ${{ github.event.inputs.run_tests }}
        pytb2: ${{env.PYTB2}}
        libtb2: ${{env.LIBTB2}}
        boost: ${{env.BOOST}}
        mpi: ${{env.MPI}}

  # upload binaries artifact
      # - name: Upload artifacts
      #   if: ${{ github.event.inputs.produce_artifacts == 'true' }}
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: "toulbar2_${{github.event.inputs.platform}}_artifacts"
      #     path: |
      #       ${{runner.workspace}}/toulbar2/build/lib
      #       ${{runner.workspace}}/toulbar2/build/bin
      #     retention-days: 1